<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pay.dao.AdminMoneyDao" >
  <resultMap id="BaseResultMap" type="com.pay.pojo.AdminMoney" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="UserID" property="userid" jdbcType="INTEGER" />
    <result column="money" property="money" jdbcType="DECIMAL" />
    <result column="jj" property="jj" jdbcType="INTEGER" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="datetime" property="datetime" jdbcType="DATE" />
    <result column="zt" property="zt" jdbcType="INTEGER" />
    <result column="lr" property="lr" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, UserID, money, jj, content, datetime, zt, lr
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from pay_adminmoney
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from pay_adminmoney
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.pay.pojo.AdminMoney" >
    insert into pay_adminmoney (id, UserID, money, 
      jj, content, datetime, 
      zt, lr)
    values (#{id,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{money,jdbcType=DECIMAL}, 
      #{jj,jdbcType=INTEGER}, #{content,jdbcType=VARCHAR}, #{datetime,jdbcType=DATE}, 
      #{zt,jdbcType=INTEGER}, #{lr,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.pay.pojo.AdminMoney" >
    insert into pay_adminmoney
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userid != null" >
        UserID,
      </if>
      <if test="money != null" >
        money,
      </if>
      <if test="jj != null" >
        jj,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="datetime != null" >
        datetime,
      </if>
      <if test="zt != null" >
        zt,
      </if>
      <if test="lr != null" >
        lr,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="money != null" >
        #{money,jdbcType=DECIMAL},
      </if>
      <if test="jj != null" >
        #{jj,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="datetime != null" >
        #{datetime,jdbcType=DATE},
      </if>
      <if test="zt != null" >
        #{zt,jdbcType=INTEGER},
      </if>
      <if test="lr != null" >
        #{lr,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.pay.pojo.AdminMoney" >
    update pay_adminmoney
    <set >
      <if test="userid != null" >
        UserID = #{userid,jdbcType=INTEGER},
      </if>
      <if test="money != null" >
        money = #{money,jdbcType=DECIMAL},
      </if>
      <if test="jj != null" >
        jj = #{jj,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="datetime != null" >
        datetime = #{datetime,jdbcType=DATE},
      </if>
      <if test="zt != null" >
        zt = #{zt,jdbcType=INTEGER},
      </if>
      <if test="lr != null" >
        lr = #{lr,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pay.pojo.AdminMoney" >
    update pay_adminmoney
    set UserID = #{userid,jdbcType=INTEGER},
      money = #{money,jdbcType=DECIMAL},
      jj = #{jj,jdbcType=INTEGER},
      content = #{content,jdbcType=VARCHAR},
      datetime = #{datetime,jdbcType=DATE},
      zt = #{zt,jdbcType=INTEGER},
      lr = #{lr,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>